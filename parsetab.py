
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "programleftORleftANDrightNOTleft<LESS_EQUAL>GREATER_EQUALNOT_EQUALEQUAL_EQUALleft+-left*/INT_DIVIDE%leftPOWERrightUPLUSUMINUSAND APPEND COPY DEF ELIF ELSE EQUAL_EQUAL EXTEND FALSE FLOAT GREATER_EQUAL ID IF INDEX INSERT INT INT_DIVIDE LEN LESS_EQUAL NEW_LINE NOT NOT_EQUAL OR POP POWER RETURN STR TRUE WHILE\n        program : code_lines\n                | optional_new_lines code_lines\n        \n        code_lines : code_line\n                   | code_line new_lines\n                   | code_line new_lines code_lines\n                   | code_line optional_new_lines code_lines\n        \n        code_line : function_def\n                  | statement\n                  | expr\n        \n        block : ':' new_lines optional_new_lines code_lines '#' new_lines\n              | ':' new_lines optional_new_lines code_lines '#'\n        \n        optional_new_lines : new_lines\n                           | empty\n        \n        new_lines : NEW_LINE\n                  | NEW_LINE new_lines\n        \n        statement : assignment_statement\n                  | if_statement \n                  | while_statement\n                  | return_statement\n        \n        assignment_statement : ID '=' expr\n        \n        params : expr\n               | expr ',' params\n        \n        params_or_empty : params\n                        | empty\n        \n        function_def : DEF ID '(' params_or_empty ')' block\n        \n        if_statement : IF expr block\n                     | IF expr block elif_statements\n                     | IF expr block ELSE block\n                     | IF expr block elif_statements ELSE block\n        \n        elif_statements : ELIF expr block\n                        | ELIF expr block elif_statements\n        \n        while_statement : WHILE expr block\n        \n        return_statement : RETURN expr\n                         | RETURN\n        \n        expr : ID\n        \n        expr : TRUE\n             | FALSE\n             | INT\n             | FLOAT\n             | STR\n        \n        expr : list\n        \n        expr : tuple\n        \n        expr : sequence_call\n        \n        expr : function_call\n        \n        expr : NOT expr\n             | '+' expr %prec UPLUS\n             | '-' expr %prec UMINUS\n        \n        expr : expr AND expr\n             | expr OR expr\n             | expr EQUAL_EQUAL expr\n             | expr NOT_EQUAL expr\n             | expr '+' expr\n             | expr '-' expr\n             | expr '*' expr\n             | expr '/' expr\n             | expr '%' expr\n             | expr POWER expr\n             | expr INT_DIVIDE expr\n             | expr '>' expr\n             | expr '<' expr\n             | expr GREATER_EQUAL expr\n             | expr LESS_EQUAL expr\n        \n        expr : '(' expr ')'\n        \n        elements : expr ',' elements\n                 | expr ','\n                 | expr\n        \n        elements_or_empty : elements\n                          | empty\n        \n        tuple : '(' elements_or_empty ')'\n              | '(' ')'\n        \n        list : '[' elements_or_empty ']'\n             | '[' ']'\n        \n        sequence_call : sequence_index\n                      | sequence_slice\n                      | sequence_function_call\n                      | sequence_method\n        \n        sequence_index : expr '[' expr ']'\n        \n        sequence_slice : expr '[' ':' ']'\n                       | expr '[' expr ':' ']'\n                       | expr '[' ':' expr ']'\n                       | expr '[' expr ':' expr ']'\n                       | expr '[' ':' ':' ']'\n                       | expr '[' expr ':' ':' ']'\n                       | expr '[' ':' expr ':' ']'\n                       | expr '[' ':' ':' expr ']'\n                       | expr '[' expr ':' expr ':' ']'\n                       | expr '[' expr ':' ':' expr ']'\n                       | expr '[' ':' expr ':' expr ']'\n                       | expr '[' expr ':' expr ':' expr ']'\n        \n        sequence_function_call : LEN '(' expr ')'\n        \n        sequence_method : expr '.' APPEND '(' expr ')'\n                        | expr '.' EXTEND '(' expr ')'\n                        | expr '.' INSERT '(' expr ',' expr ')'\n                        | expr '.' INDEX '(' expr ')'\n                        | expr '.' POP '(' ')'\n                        | expr '.' POP '(' expr ')'\n                        | expr '.' COPY '(' ')'\n        \n        args : expr\n             | expr ',' args\n        \n        args_or_empty : args\n                      | empty\n        \n        function_call : ID '(' args_or_empty ')'\n        \n        empty :\n        "
    
_lr_action_items = {'NEW_LINE':([0,4,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,32,34,35,36,37,59,64,66,69,70,71,74,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,110,112,113,114,115,116,118,122,133,136,139,140,143,145,147,153,154,159,163,165,167,168,169,170,172,173,174,176,177,180,181,182,184,185,186,187,188,],[10,10,-7,-8,-9,10,-35,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,-34,-73,-74,-75,-76,-15,-70,-35,-45,-46,-47,-33,-72,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-20,-63,-69,-26,10,-32,-71,-77,-78,-102,-27,10,-90,-79,-80,-82,-95,-97,-28,-81,-83,-84,-85,-91,-92,-94,-96,-25,-29,-30,-86,-87,-88,-31,10,-89,-93,-10,]),'DEF':([0,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,32,34,35,36,37,40,41,59,64,66,69,70,71,74,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,110,112,113,115,116,118,122,133,136,139,140,143,145,147,153,154,159,161,163,165,167,168,169,170,172,173,174,176,177,180,181,182,184,185,186,187,188,],[11,11,-103,-12,-13,-7,-8,-9,-14,-35,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,-34,-73,-74,-75,-76,11,11,-15,-70,-35,-45,-46,-47,-33,-72,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-20,-63,-69,-26,-32,-71,-77,-78,-102,-27,-103,-90,-79,-80,-82,-95,-97,-28,11,-81,-83,-84,-85,-91,-92,-94,-96,-25,-29,-30,-86,-87,-88,-31,-11,-89,-93,-10,]),'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,62,64,66,69,70,71,74,76,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,104,105,110,111,112,113,115,116,118,119,121,122,123,124,125,126,127,133,134,136,138,139,140,142,143,144,145,147,153,154,156,159,161,162,163,165,167,168,169,170,171,172,173,174,176,177,180,181,182,184,185,186,187,188,],[12,12,-103,-12,-13,-7,-8,-9,-14,60,-35,66,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,66,66,66,66,66,66,66,-73,-74,-75,-76,12,12,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-15,66,66,-70,-35,-45,-46,-47,-33,-72,66,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,66,66,-20,-63,66,-69,-26,-32,-71,-77,66,66,-78,66,66,66,66,66,-102,66,-27,66,-103,-90,66,-79,66,-80,-82,-95,-97,66,-28,12,66,-81,-83,-84,-85,-91,-92,66,-94,-96,-25,-29,-30,-86,-87,-88,-31,-11,-89,-93,-10,]),'TRUE':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,62,64,66,69,70,71,74,76,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,104,105,110,111,112,113,115,116,118,119,121,122,123,124,125,126,127,133,134,136,138,139,140,142,143,144,145,147,153,154,156,159,161,162,163,165,167,168,169,170,171,172,173,174,176,177,180,181,182,184,185,186,187,188,],[18,18,-103,-12,-13,-7,-8,-9,-14,-35,18,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,18,18,18,18,18,18,18,-73,-74,-75,-76,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-15,18,18,-70,-35,-45,-46,-47,-33,-72,18,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,18,18,-20,-63,18,-69,-26,-32,-71,-77,18,18,-78,18,18,18,18,18,-102,18,-27,18,-103,-90,18,-79,18,-80,-82,-95,-97,18,-28,18,18,-81,-83,-84,-85,-91,-92,18,-94,-96,-25,-29,-30,-86,-87,-88,-31,-11,-89,-93,-10,]),'FALSE':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,62,64,66,69,70,71,74,76,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,104,105,110,111,112,113,115,116,118,119,121,122,123,124,125,126,127,133,134,136,138,139,140,142,143,144,145,147,153,154,156,159,161,162,163,165,167,168,169,170,171,172,173,174,176,177,180,181,182,184,185,186,187,188,],[19,19,-103,-12,-13,-7,-8,-9,-14,-35,19,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,19,19,19,19,19,19,19,-73,-74,-75,-76,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-15,19,19,-70,-35,-45,-46,-47,-33,-72,19,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,19,19,-20,-63,19,-69,-26,-32,-71,-77,19,19,-78,19,19,19,19,19,-102,19,-27,19,-103,-90,19,-79,19,-80,-82,-95,-97,19,-28,19,19,-81,-83,-84,-85,-91,-92,19,-94,-96,-25,-29,-30,-86,-87,-88,-31,-11,-89,-93,-10,]),'INT':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,62,64,66,69,70,71,74,76,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,104,105,110,111,112,113,115,116,118,119,121,122,123,124,125,126,127,133,134,136,138,139,140,142,143,144,145,147,153,154,156,159,161,162,163,165,167,168,169,170,171,172,173,174,176,177,180,181,182,184,185,186,187,188,],[20,20,-103,-12,-13,-7,-8,-9,-14,-35,20,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,20,20,20,20,20,20,20,-73,-74,-75,-76,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-15,20,20,-70,-35,-45,-46,-47,-33,-72,20,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,20,20,-20,-63,20,-69,-26,-32,-71,-77,20,20,-78,20,20,20,20,20,-102,20,-27,20,-103,-90,20,-79,20,-80,-82,-95,-97,20,-28,20,20,-81,-83,-84,-85,-91,-92,20,-94,-96,-25,-29,-30,-86,-87,-88,-31,-11,-89,-93,-10,]),'FLOAT':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,62,64,66,69,70,71,74,76,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,104,105,110,111,112,113,115,116,118,119,121,122,123,124,125,126,127,133,134,136,138,139,140,142,143,144,145,147,153,154,156,159,161,162,163,165,167,168,169,170,171,172,173,174,176,177,180,181,182,184,185,186,187,188,],[21,21,-103,-12,-13,-7,-8,-9,-14,-35,21,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,21,21,21,21,21,21,21,-73,-74,-75,-76,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-15,21,21,-70,-35,-45,-46,-47,-33,-72,21,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,21,21,-20,-63,21,-69,-26,-32,-71,-77,21,21,-78,21,21,21,21,21,-102,21,-27,21,-103,-90,21,-79,21,-80,-82,-95,-97,21,-28,21,21,-81,-83,-84,-85,-91,-92,21,-94,-96,-25,-29,-30,-86,-87,-88,-31,-11,-89,-93,-10,]),'STR':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,62,64,66,69,70,71,74,76,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,104,105,110,111,112,113,115,116,118,119,121,122,123,124,125,126,127,133,134,136,138,139,140,142,143,144,145,147,153,154,156,159,161,162,163,165,167,168,169,170,171,172,173,174,176,177,180,181,182,184,185,186,187,188,],[22,22,-103,-12,-13,-7,-8,-9,-14,-35,22,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,22,22,22,22,22,22,22,-73,-74,-75,-76,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-15,22,22,-70,-35,-45,-46,-47,-33,-72,22,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,22,22,-20,-63,22,-69,-26,-32,-71,-77,22,22,-78,22,22,22,22,22,-102,22,-27,22,-103,-90,22,-79,22,-80,-82,-95,-97,22,-28,22,22,-81,-83,-84,-85,-91,-92,22,-94,-96,-25,-29,-30,-86,-87,-88,-31,-11,-89,-93,-10,]),'NOT':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,62,64,66,69,70,71,74,76,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,104,105,110,111,112,113,115,116,118,119,121,122,123,124,125,126,127,133,134,136,138,139,140,142,143,144,145,147,153,154,156,159,161,162,163,165,167,168,169,170,171,172,173,174,176,177,180,181,182,184,185,186,187,188,],[27,27,-103,-12,-13,-7,-8,-9,-14,-35,27,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,27,27,27,27,27,27,27,-73,-74,-75,-76,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-15,27,27,-70,-35,-45,-46,-47,-33,-72,27,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,27,27,-20,-63,27,-69,-26,-32,-71,-77,27,27,-78,27,27,27,27,27,-102,27,-27,27,-103,-90,27,-79,27,-80,-82,-95,-97,27,-28,27,27,-81,-83,-84,-85,-91,-92,27,-94,-96,-25,-29,-30,-86,-87,-88,-31,-11,-89,-93,-10,]),'+':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,62,63,64,66,69,70,71,72,73,74,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,105,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,132,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,179,180,181,182,183,184,185,186,187,188,],[28,28,-103,-12,-13,-7,-8,46,-14,-35,28,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,28,28,28,28,28,28,28,-73,-74,-75,-76,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-15,28,28,46,-70,-35,46,-46,-47,46,46,46,-72,46,28,46,46,46,46,-52,-53,-54,-55,-56,-57,-58,46,46,46,46,46,28,28,46,46,-63,28,-69,-26,-32,-71,46,-77,28,46,28,-78,28,28,28,28,28,46,-102,28,-27,28,-103,-90,46,28,-79,28,-80,46,-82,46,46,46,46,46,-95,-97,28,-28,46,28,28,-81,46,-83,46,-84,-85,-91,-92,28,-94,-96,-25,-29,-30,46,-86,-87,-88,46,-31,-11,-89,-93,-10,]),'-':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,62,63,64,66,69,70,71,72,73,74,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,105,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,132,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,179,180,181,182,183,184,185,186,187,188,],[29,29,-103,-12,-13,-7,-8,47,-14,-35,29,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,29,29,29,29,29,29,29,-73,-74,-75,-76,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-15,29,29,47,-70,-35,47,-46,-47,47,47,47,-72,47,29,47,47,47,47,-52,-53,-54,-55,-56,-57,-58,47,47,47,47,47,29,29,47,47,-63,29,-69,-26,-32,-71,47,-77,29,47,29,-78,29,29,29,29,29,47,-102,29,-27,29,-103,-90,47,29,-79,29,-80,47,-82,47,47,47,47,47,-95,-97,29,-28,47,29,29,-81,47,-83,47,-84,-85,-91,-92,29,-94,-96,-25,-29,-30,47,-86,-87,-88,47,-31,-11,-89,-93,-10,]),'(':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,66,69,70,71,74,76,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,110,111,112,113,115,116,118,119,121,122,123,124,125,126,127,133,134,136,138,139,140,142,143,144,145,147,153,154,156,159,161,162,163,165,167,168,169,170,171,172,173,174,176,177,180,181,182,184,185,186,187,188,],[13,13,-103,-12,-13,-7,-8,-9,-14,62,13,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,13,13,13,13,13,13,13,-73,-74,-75,-76,78,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-15,104,13,13,-70,62,-45,-46,-47,-33,-72,13,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,13,123,124,125,126,127,128,13,-20,-63,13,-69,-26,-32,-71,-77,13,13,-78,13,13,13,13,13,-102,13,-27,13,-103,-90,13,-79,13,-80,-82,-95,-97,13,-28,13,13,-81,-83,-84,-85,-91,-92,13,-94,-96,-25,-29,-30,-86,-87,-88,-31,-11,-89,-93,-10,]),'IF':([0,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,32,34,35,36,37,40,41,59,64,66,69,70,71,74,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,110,112,113,115,116,118,122,133,136,139,140,143,145,147,153,154,159,161,163,165,167,168,169,170,172,173,174,176,177,180,181,182,184,185,186,187,188,],[30,30,-103,-12,-13,-7,-8,-9,-14,-35,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,-34,-73,-74,-75,-76,30,30,-15,-70,-35,-45,-46,-47,-33,-72,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-20,-63,-69,-26,-32,-71,-77,-78,-102,-27,-103,-90,-79,-80,-82,-95,-97,-28,30,-81,-83,-84,-85,-91,-92,-94,-96,-25,-29,-30,-86,-87,-88,-31,-11,-89,-93,-10,]),'WHILE':([0,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,32,34,35,36,37,40,41,59,64,66,69,70,71,74,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,110,112,113,115,116,118,122,133,136,139,140,143,145,147,153,154,159,161,163,165,167,168,169,170,172,173,174,176,177,180,181,182,184,185,186,187,188,],[31,31,-103,-12,-13,-7,-8,-9,-14,-35,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,-34,-73,-74,-75,-76,31,31,-15,-70,-35,-45,-46,-47,-33,-72,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-20,-63,-69,-26,-32,-71,-77,-78,-102,-27,-103,-90,-79,-80,-82,-95,-97,-28,31,-81,-83,-84,-85,-91,-92,-94,-96,-25,-29,-30,-86,-87,-88,-31,-11,-89,-93,-10,]),'RETURN':([0,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,32,34,35,36,37,40,41,59,64,66,69,70,71,74,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,110,112,113,115,116,118,122,133,136,139,140,143,145,147,153,154,159,161,163,165,167,168,169,170,172,173,174,176,177,180,181,182,184,185,186,187,188,],[32,32,-103,-12,-13,-7,-8,-9,-14,-35,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,-34,-73,-74,-75,-76,32,32,-15,-70,-35,-45,-46,-47,-33,-72,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-20,-63,-69,-26,-32,-71,-77,-78,-102,-27,-103,-90,-79,-80,-82,-95,-97,-28,32,-81,-83,-84,-85,-91,-92,-94,-96,-25,-29,-30,-86,-87,-88,-31,-11,-89,-93,-10,]),'[':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,62,63,64,66,69,70,71,72,73,74,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,105,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,132,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,179,180,181,182,183,184,185,186,187,188,],[33,33,-103,-12,-13,-7,-8,57,-14,-35,33,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,33,33,33,33,33,33,33,-73,-74,-75,-76,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-15,33,33,57,-70,-35,-45,-46,-47,57,57,57,-72,57,33,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,57,33,33,57,57,-63,33,-69,-26,-32,-71,57,-77,33,57,33,-78,33,33,33,33,33,57,-102,33,-27,33,-103,-90,57,33,-79,33,-80,57,-82,57,57,57,57,57,-95,-97,33,-28,57,33,33,-81,57,-83,57,-84,-85,-91,-92,33,-94,-96,-25,-29,-30,57,-86,-87,-88,57,-31,-11,-89,-93,-10,]),'LEN':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,62,64,66,69,70,71,74,76,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,104,105,110,111,112,113,115,116,118,119,121,122,123,124,125,126,127,133,134,136,138,139,140,142,143,144,145,147,153,154,156,159,161,162,163,165,167,168,169,170,171,172,173,174,176,177,180,181,182,184,185,186,187,188,],[38,38,-103,-12,-13,-7,-8,-9,-14,-35,38,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,38,38,38,38,38,38,38,-73,-74,-75,-76,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-15,38,38,-70,-35,-45,-46,-47,-33,-72,38,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,38,38,-20,-63,38,-69,-26,-32,-71,-77,38,38,-78,38,38,38,38,38,-102,38,-27,38,-103,-90,38,-79,38,-80,-82,-95,-97,38,-28,38,38,-81,-83,-84,-85,-91,-92,38,-94,-96,-25,-29,-30,-86,-87,-88,-31,-11,-89,-93,-10,]),'$end':([1,2,4,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,32,34,35,36,37,39,40,59,64,66,69,70,71,74,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,110,112,113,115,116,118,122,133,136,140,143,145,147,153,154,159,163,165,167,168,169,170,172,173,174,176,177,180,181,182,184,185,186,187,188,],[0,-1,-3,-7,-8,-9,-14,-35,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,-34,-73,-74,-75,-76,-2,-4,-15,-70,-35,-45,-46,-47,-33,-72,-5,-6,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-20,-63,-69,-26,-32,-71,-77,-78,-102,-27,-90,-79,-80,-82,-95,-97,-28,-81,-83,-84,-85,-91,-92,-94,-96,-25,-29,-30,-86,-87,-88,-31,-11,-89,-93,-10,]),'#':([4,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,32,34,35,36,37,40,59,64,66,69,70,71,74,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,110,112,113,115,116,118,122,133,136,140,143,145,147,153,154,159,163,165,167,168,169,170,172,173,174,176,177,178,180,181,182,184,185,186,187,188,],[-3,-7,-8,-9,-14,-35,-16,-17,-18,-19,-36,-37,-38,-39,-40,-41,-42,-43,-44,-34,-73,-74,-75,-76,-4,-15,-70,-35,-45,-46,-47,-33,-72,-5,-6,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-20,-63,-69,-26,-32,-71,-77,-78,-102,-27,-90,-79,-80,-82,-95,-97,-28,-81,-83,-84,-85,-91,-92,-94,-96,-25,-29,-30,185,-86,-87,-88,-31,-11,-89,-93,-10,]),'AND':([9,12,18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,72,73,74,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,110,112,116,117,118,120,122,132,133,140,141,143,145,146,147,148,149,150,151,152,153,154,160,163,164,165,166,167,168,169,170,172,173,179,180,181,182,183,186,187,],[42,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,42,-70,-35,-45,-46,-47,42,42,42,-72,42,-48,42,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,42,42,42,-63,-69,-71,42,-77,42,-78,42,-102,-90,42,-79,-80,42,-82,42,42,42,42,42,-95,-97,42,-81,42,-83,42,-84,-85,-91,-92,-94,-96,42,-86,-87,-88,42,-89,-93,]),'OR':([9,12,18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,72,73,74,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,110,112,116,117,118,120,122,132,133,140,141,143,145,146,147,148,149,150,151,152,153,154,160,163,164,165,166,167,168,169,170,172,173,179,180,181,182,183,186,187,],[43,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,43,-70,-35,-45,-46,-47,43,43,43,-72,43,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,43,43,43,-63,-69,-71,43,-77,43,-78,43,-102,-90,43,-79,-80,43,-82,43,43,43,43,43,-95,-97,43,-81,43,-83,43,-84,-85,-91,-92,-94,-96,43,-86,-87,-88,43,-89,-93,]),'EQUAL_EQUAL':([9,12,18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,72,73,74,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,110,112,116,117,118,120,122,132,133,140,141,143,145,146,147,148,149,150,151,152,153,154,160,163,164,165,166,167,168,169,170,172,173,179,180,181,182,183,186,187,],[44,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,44,-70,-35,44,-46,-47,44,44,44,-72,44,44,44,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,44,44,44,-63,-69,-71,44,-77,44,-78,44,-102,-90,44,-79,-80,44,-82,44,44,44,44,44,-95,-97,44,-81,44,-83,44,-84,-85,-91,-92,-94,-96,44,-86,-87,-88,44,-89,-93,]),'NOT_EQUAL':([9,12,18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,72,73,74,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,110,112,116,117,118,120,122,132,133,140,141,143,145,146,147,148,149,150,151,152,153,154,160,163,164,165,166,167,168,169,170,172,173,179,180,181,182,183,186,187,],[45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,45,-70,-35,45,-46,-47,45,45,45,-72,45,45,45,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,45,45,45,-63,-69,-71,45,-77,45,-78,45,-102,-90,45,-79,-80,45,-82,45,45,45,45,45,-95,-97,45,-81,45,-83,45,-84,-85,-91,-92,-94,-96,45,-86,-87,-88,45,-89,-93,]),'*':([9,12,18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,72,73,74,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,110,112,116,117,118,120,122,132,133,140,141,143,145,146,147,148,149,150,151,152,153,154,160,163,164,165,166,167,168,169,170,172,173,179,180,181,182,183,186,187,],[48,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,48,-70,-35,48,-46,-47,48,48,48,-72,48,48,48,48,48,48,48,-54,-55,-56,-57,-58,48,48,48,48,48,48,48,-63,-69,-71,48,-77,48,-78,48,-102,-90,48,-79,-80,48,-82,48,48,48,48,48,-95,-97,48,-81,48,-83,48,-84,-85,-91,-92,-94,-96,48,-86,-87,-88,48,-89,-93,]),'/':([9,12,18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,72,73,74,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,110,112,116,117,118,120,122,132,133,140,141,143,145,146,147,148,149,150,151,152,153,154,160,163,164,165,166,167,168,169,170,172,173,179,180,181,182,183,186,187,],[49,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,49,-70,-35,49,-46,-47,49,49,49,-72,49,49,49,49,49,49,49,-54,-55,-56,-57,-58,49,49,49,49,49,49,49,-63,-69,-71,49,-77,49,-78,49,-102,-90,49,-79,-80,49,-82,49,49,49,49,49,-95,-97,49,-81,49,-83,49,-84,-85,-91,-92,-94,-96,49,-86,-87,-88,49,-89,-93,]),'%':([9,12,18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,72,73,74,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,110,112,116,117,118,120,122,132,133,140,141,143,145,146,147,148,149,150,151,152,153,154,160,163,164,165,166,167,168,169,170,172,173,179,180,181,182,183,186,187,],[50,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,50,-70,-35,50,-46,-47,50,50,50,-72,50,50,50,50,50,50,50,-54,-55,-56,-57,-58,50,50,50,50,50,50,50,-63,-69,-71,50,-77,50,-78,50,-102,-90,50,-79,-80,50,-82,50,50,50,50,50,-95,-97,50,-81,50,-83,50,-84,-85,-91,-92,-94,-96,50,-86,-87,-88,50,-89,-93,]),'POWER':([9,12,18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,72,73,74,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,110,112,116,117,118,120,122,132,133,140,141,143,145,146,147,148,149,150,151,152,153,154,160,163,164,165,166,167,168,169,170,172,173,179,180,181,182,183,186,187,],[51,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,51,-70,-35,51,-46,-47,51,51,51,-72,51,51,51,51,51,51,51,51,51,51,-57,51,51,51,51,51,51,51,51,-63,-69,-71,51,-77,51,-78,51,-102,-90,51,-79,-80,51,-82,51,51,51,51,51,-95,-97,51,-81,51,-83,51,-84,-85,-91,-92,-94,-96,51,-86,-87,-88,51,-89,-93,]),'INT_DIVIDE':([9,12,18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,72,73,74,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,110,112,116,117,118,120,122,132,133,140,141,143,145,146,147,148,149,150,151,152,153,154,160,163,164,165,166,167,168,169,170,172,173,179,180,181,182,183,186,187,],[52,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,52,-70,-35,52,-46,-47,52,52,52,-72,52,52,52,52,52,52,52,-54,-55,-56,-57,-58,52,52,52,52,52,52,52,-63,-69,-71,52,-77,52,-78,52,-102,-90,52,-79,-80,52,-82,52,52,52,52,52,-95,-97,52,-81,52,-83,52,-84,-85,-91,-92,-94,-96,52,-86,-87,-88,52,-89,-93,]),'>':([9,12,18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,72,73,74,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,110,112,116,117,118,120,122,132,133,140,141,143,145,146,147,148,149,150,151,152,153,154,160,163,164,165,166,167,168,169,170,172,173,179,180,181,182,183,186,187,],[53,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,53,-70,-35,53,-46,-47,53,53,53,-72,53,53,53,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,53,53,53,-63,-69,-71,53,-77,53,-78,53,-102,-90,53,-79,-80,53,-82,53,53,53,53,53,-95,-97,53,-81,53,-83,53,-84,-85,-91,-92,-94,-96,53,-86,-87,-88,53,-89,-93,]),'<':([9,12,18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,72,73,74,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,110,112,116,117,118,120,122,132,133,140,141,143,145,146,147,148,149,150,151,152,153,154,160,163,164,165,166,167,168,169,170,172,173,179,180,181,182,183,186,187,],[54,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,54,-70,-35,54,-46,-47,54,54,54,-72,54,54,54,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,54,54,54,-63,-69,-71,54,-77,54,-78,54,-102,-90,54,-79,-80,54,-82,54,54,54,54,54,-95,-97,54,-81,54,-83,54,-84,-85,-91,-92,-94,-96,54,-86,-87,-88,54,-89,-93,]),'GREATER_EQUAL':([9,12,18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,72,73,74,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,110,112,116,117,118,120,122,132,133,140,141,143,145,146,147,148,149,150,151,152,153,154,160,163,164,165,166,167,168,169,170,172,173,179,180,181,182,183,186,187,],[55,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,55,-70,-35,55,-46,-47,55,55,55,-72,55,55,55,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,55,55,55,-63,-69,-71,55,-77,55,-78,55,-102,-90,55,-79,-80,55,-82,55,55,55,55,55,-95,-97,55,-81,55,-83,55,-84,-85,-91,-92,-94,-96,55,-86,-87,-88,55,-89,-93,]),'LESS_EQUAL':([9,12,18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,72,73,74,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,110,112,116,117,118,120,122,132,133,140,141,143,145,146,147,148,149,150,151,152,153,154,160,163,164,165,166,167,168,169,170,172,173,179,180,181,182,183,186,187,],[56,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,56,-70,-35,56,-46,-47,56,56,56,-72,56,56,56,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,56,56,56,-63,-69,-71,56,-77,56,-78,56,-102,-90,56,-79,-80,56,-82,56,56,56,56,56,-95,-97,56,-81,56,-83,56,-84,-85,-91,-92,-94,-96,56,-86,-87,-88,56,-89,-93,]),'.':([9,12,18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,72,73,74,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,110,112,116,117,118,120,122,132,133,140,141,143,145,146,147,148,149,150,151,152,153,154,160,163,164,165,166,167,168,169,170,172,173,179,180,181,182,183,186,187,],[58,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,58,-70,-35,-45,-46,-47,58,58,58,-72,58,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,58,58,58,-63,-69,-71,58,-77,58,-78,58,-102,-90,58,-79,-80,58,-82,58,58,58,58,58,-95,-97,58,-81,58,-83,58,-84,-85,-91,-92,-94,-96,58,-86,-87,-88,58,-89,-93,]),'ELSE':([10,59,113,136,177,184,185,188,],[-14,-15,137,158,-30,-31,-11,-10,]),'ELIF':([10,59,113,177,185,188,],[-14,-15,138,138,-11,-10,]),'=':([12,],[61,]),')':([13,18,19,20,21,22,23,24,25,26,34,35,36,37,62,63,64,65,66,67,68,69,70,71,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,104,106,107,108,109,110,111,112,116,117,118,122,127,128,129,130,131,132,133,135,140,143,145,147,148,149,151,152,153,154,157,163,165,167,168,169,170,172,173,175,180,181,182,183,186,187,],[64,-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,-103,110,-70,112,-35,-67,-68,-45,-46,-47,-72,-66,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-103,133,-100,-101,-98,-63,-65,-69,-71,140,-77,-78,153,154,155,-23,-24,-21,-102,-64,-90,-79,-80,-82,169,170,172,173,-95,-97,-99,-81,-83,-84,-85,-91,-92,-94,-96,-22,-86,-87,-88,187,-89,-93,]),',':([18,19,20,21,22,23,24,25,26,34,35,36,37,63,64,66,69,70,71,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,109,110,112,116,118,122,132,133,140,143,145,147,150,153,154,163,165,167,168,169,170,172,173,180,181,182,186,187,],[-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,111,-70,-35,-45,-46,-47,-72,111,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,134,-63,-69,-71,-77,-78,156,-102,-90,-79,-80,-82,171,-95,-97,-81,-83,-84,-85,-91,-92,-94,-96,-86,-87,-88,-89,-93,]),':':([18,19,20,21,22,23,24,25,26,34,35,36,37,57,64,66,69,70,71,72,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,110,112,116,118,119,120,122,133,137,140,141,143,145,147,153,154,155,158,160,163,165,167,168,169,170,172,173,180,181,182,186,187,],[-36,-37,-38,-39,-40,-41,-42,-43,-44,-73,-74,-75,-76,97,-70,-35,-45,-46,-47,114,114,-72,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,119,121,-63,-69,-71,-77,142,144,-78,-102,114,-90,162,-79,-80,-82,-95,-97,114,114,114,-81,-83,-84,-85,-91,-92,-94,-96,-86,-87,-88,-89,-93,]),']':([18,19,20,21,22,23,24,25,26,33,34,35,36,37,64,66,67,68,69,70,71,75,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,112,116,118,119,120,121,122,133,135,140,141,142,143,144,145,146,147,153,154,162,163,164,165,166,167,168,169,170,172,173,179,180,181,182,186,187,],[-36,-37,-38,-39,-40,-41,-42,-43,-44,76,-73,-74,-75,-76,-70,-35,-67,-68,-45,-46,-47,116,-72,-66,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,118,122,-63,-65,-69,-71,-77,143,145,147,-78,-102,-64,-90,163,165,-79,167,-80,168,-82,-95,-97,180,-81,181,-83,182,-84,-85,-91,-92,-94,-96,186,-86,-87,-88,-89,-93,]),'APPEND':([58,],[98,]),'EXTEND':([58,],[99,]),'INSERT':([58,],[100,]),'INDEX':([58,],[101,]),'POP':([58,],[102,]),'COPY':([58,],[103,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'code_lines':([0,3,40,41,161,],[2,39,79,80,178,]),'optional_new_lines':([0,4,139,],[3,41,161,]),'code_line':([0,3,40,41,161,],[4,4,4,4,4,]),'new_lines':([0,4,10,114,139,185,],[5,40,59,139,5,188,]),'empty':([0,4,13,33,62,104,139,],[6,6,68,68,108,131,6,]),'function_def':([0,3,40,41,161,],[7,7,7,7,7,]),'statement':([0,3,40,41,161,],[8,8,8,8,8,]),'expr':([0,3,13,27,28,29,30,31,32,33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,78,97,104,111,119,121,123,124,125,126,127,134,138,142,144,156,161,162,171,],[9,9,63,69,70,71,72,73,74,77,9,9,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,109,117,120,132,77,141,146,148,149,150,151,152,109,160,164,166,132,9,179,183,]),'assignment_statement':([0,3,40,41,161,],[14,14,14,14,14,]),'if_statement':([0,3,40,41,161,],[15,15,15,15,15,]),'while_statement':([0,3,40,41,161,],[16,16,16,16,16,]),'return_statement':([0,3,40,41,161,],[17,17,17,17,17,]),'list':([0,3,13,27,28,29,30,31,32,33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,78,97,104,111,119,121,123,124,125,126,127,134,138,142,144,156,161,162,171,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'tuple':([0,3,13,27,28,29,30,31,32,33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,78,97,104,111,119,121,123,124,125,126,127,134,138,142,144,156,161,162,171,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'sequence_call':([0,3,13,27,28,29,30,31,32,33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,78,97,104,111,119,121,123,124,125,126,127,134,138,142,144,156,161,162,171,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'function_call':([0,3,13,27,28,29,30,31,32,33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,78,97,104,111,119,121,123,124,125,126,127,134,138,142,144,156,161,162,171,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'sequence_index':([0,3,13,27,28,29,30,31,32,33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,78,97,104,111,119,121,123,124,125,126,127,134,138,142,144,156,161,162,171,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'sequence_slice':([0,3,13,27,28,29,30,31,32,33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,78,97,104,111,119,121,123,124,125,126,127,134,138,142,144,156,161,162,171,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'sequence_function_call':([0,3,13,27,28,29,30,31,32,33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,78,97,104,111,119,121,123,124,125,126,127,134,138,142,144,156,161,162,171,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'sequence_method':([0,3,13,27,28,29,30,31,32,33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,78,97,104,111,119,121,123,124,125,126,127,134,138,142,144,156,161,162,171,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'elements_or_empty':([13,33,],[65,75,]),'elements':([13,33,111,],[67,67,135,]),'args_or_empty':([62,],[106,]),'args':([62,134,],[107,157,]),'block':([72,73,137,155,158,160,],[113,115,159,174,176,177,]),'params_or_empty':([104,],[129,]),'params':([104,156,],[130,175,]),'elif_statements':([113,177,],[136,184,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> code_lines','program',1,'p_program','miniPythonParser.py',28),
  ('program -> optional_new_lines code_lines','program',2,'p_program','miniPythonParser.py',29),
  ('code_lines -> code_line','code_lines',1,'p_code_lines','miniPythonParser.py',39),
  ('code_lines -> code_line new_lines','code_lines',2,'p_code_lines','miniPythonParser.py',40),
  ('code_lines -> code_line new_lines code_lines','code_lines',3,'p_code_lines','miniPythonParser.py',41),
  ('code_lines -> code_line optional_new_lines code_lines','code_lines',3,'p_code_lines','miniPythonParser.py',42),
  ('code_line -> function_def','code_line',1,'p_code_line','miniPythonParser.py',51),
  ('code_line -> statement','code_line',1,'p_code_line','miniPythonParser.py',52),
  ('code_line -> expr','code_line',1,'p_code_line','miniPythonParser.py',53),
  ('block -> : new_lines optional_new_lines code_lines # new_lines','block',6,'p_block','miniPythonParser.py',60),
  ('block -> : new_lines optional_new_lines code_lines #','block',5,'p_block','miniPythonParser.py',61),
  ('optional_new_lines -> new_lines','optional_new_lines',1,'p_optional_new_lines','miniPythonParser.py',68),
  ('optional_new_lines -> empty','optional_new_lines',1,'p_optional_new_lines','miniPythonParser.py',69),
  ('new_lines -> NEW_LINE','new_lines',1,'p_new_lines','miniPythonParser.py',76),
  ('new_lines -> NEW_LINE new_lines','new_lines',2,'p_new_lines','miniPythonParser.py',77),
  ('statement -> assignment_statement','statement',1,'p_statement','miniPythonParser.py',84),
  ('statement -> if_statement','statement',1,'p_statement','miniPythonParser.py',85),
  ('statement -> while_statement','statement',1,'p_statement','miniPythonParser.py',86),
  ('statement -> return_statement','statement',1,'p_statement','miniPythonParser.py',87),
  ('assignment_statement -> ID = expr','assignment_statement',3,'p_assignment_statement','miniPythonParser.py',94),
  ('params -> expr','params',1,'p_params','miniPythonParser.py',101),
  ('params -> expr , params','params',3,'p_params','miniPythonParser.py',102),
  ('params_or_empty -> params','params_or_empty',1,'p_params_or_empty','miniPythonParser.py',111),
  ('params_or_empty -> empty','params_or_empty',1,'p_params_or_empty','miniPythonParser.py',112),
  ('function_def -> DEF ID ( params_or_empty ) block','function_def',6,'p_function_def','miniPythonParser.py',118),
  ('if_statement -> IF expr block','if_statement',3,'p_if_statement','miniPythonParser.py',125),
  ('if_statement -> IF expr block elif_statements','if_statement',4,'p_if_statement','miniPythonParser.py',126),
  ('if_statement -> IF expr block ELSE block','if_statement',5,'p_if_statement','miniPythonParser.py',127),
  ('if_statement -> IF expr block elif_statements ELSE block','if_statement',6,'p_if_statement','miniPythonParser.py',128),
  ('elif_statements -> ELIF expr block','elif_statements',3,'p_elif_statements','miniPythonParser.py',142),
  ('elif_statements -> ELIF expr block elif_statements','elif_statements',4,'p_elif_statements','miniPythonParser.py',143),
  ('while_statement -> WHILE expr block','while_statement',3,'p_while_statement','miniPythonParser.py',153),
  ('return_statement -> RETURN expr','return_statement',2,'p_return_statement','miniPythonParser.py',159),
  ('return_statement -> RETURN','return_statement',1,'p_return_statement','miniPythonParser.py',160),
  ('expr -> ID','expr',1,'p_expr_id','miniPythonParser.py',170),
  ('expr -> TRUE','expr',1,'p_expr_literal','miniPythonParser.py',177),
  ('expr -> FALSE','expr',1,'p_expr_literal','miniPythonParser.py',178),
  ('expr -> INT','expr',1,'p_expr_literal','miniPythonParser.py',179),
  ('expr -> FLOAT','expr',1,'p_expr_literal','miniPythonParser.py',180),
  ('expr -> STR','expr',1,'p_expr_literal','miniPythonParser.py',181),
  ('expr -> list','expr',1,'p_expr_list','miniPythonParser.py',188),
  ('expr -> tuple','expr',1,'p_expr_tuple','miniPythonParser.py',195),
  ('expr -> sequence_call','expr',1,'p_expr_sequence_call','miniPythonParser.py',202),
  ('expr -> function_call','expr',1,'p_expr_function_call','miniPythonParser.py',209),
  ('expr -> NOT expr','expr',2,'p_expr_unary_op','miniPythonParser.py',216),
  ('expr -> + expr','expr',2,'p_expr_unary_op','miniPythonParser.py',217),
  ('expr -> - expr','expr',2,'p_expr_unary_op','miniPythonParser.py',218),
  ('expr -> expr AND expr','expr',3,'p_expr_binary_op','miniPythonParser.py',225),
  ('expr -> expr OR expr','expr',3,'p_expr_binary_op','miniPythonParser.py',226),
  ('expr -> expr EQUAL_EQUAL expr','expr',3,'p_expr_binary_op','miniPythonParser.py',227),
  ('expr -> expr NOT_EQUAL expr','expr',3,'p_expr_binary_op','miniPythonParser.py',228),
  ('expr -> expr + expr','expr',3,'p_expr_binary_op','miniPythonParser.py',229),
  ('expr -> expr - expr','expr',3,'p_expr_binary_op','miniPythonParser.py',230),
  ('expr -> expr * expr','expr',3,'p_expr_binary_op','miniPythonParser.py',231),
  ('expr -> expr / expr','expr',3,'p_expr_binary_op','miniPythonParser.py',232),
  ('expr -> expr % expr','expr',3,'p_expr_binary_op','miniPythonParser.py',233),
  ('expr -> expr POWER expr','expr',3,'p_expr_binary_op','miniPythonParser.py',234),
  ('expr -> expr INT_DIVIDE expr','expr',3,'p_expr_binary_op','miniPythonParser.py',235),
  ('expr -> expr > expr','expr',3,'p_expr_binary_op','miniPythonParser.py',236),
  ('expr -> expr < expr','expr',3,'p_expr_binary_op','miniPythonParser.py',237),
  ('expr -> expr GREATER_EQUAL expr','expr',3,'p_expr_binary_op','miniPythonParser.py',238),
  ('expr -> expr LESS_EQUAL expr','expr',3,'p_expr_binary_op','miniPythonParser.py',239),
  ('expr -> ( expr )','expr',3,'p_expr_group','miniPythonParser.py',246),
  ('elements -> expr , elements','elements',3,'p_elements','miniPythonParser.py',253),
  ('elements -> expr ,','elements',2,'p_elements','miniPythonParser.py',254),
  ('elements -> expr','elements',1,'p_elements','miniPythonParser.py',255),
  ('elements_or_empty -> elements','elements_or_empty',1,'p_elements_or_empty','miniPythonParser.py',265),
  ('elements_or_empty -> empty','elements_or_empty',1,'p_elements_or_empty','miniPythonParser.py',266),
  ('tuple -> ( elements_or_empty )','tuple',3,'p_tuple','miniPythonParser.py',273),
  ('tuple -> ( )','tuple',2,'p_tuple','miniPythonParser.py',274),
  ('list -> [ elements_or_empty ]','list',3,'p_list','miniPythonParser.py',284),
  ('list -> [ ]','list',2,'p_list','miniPythonParser.py',285),
  ('sequence_call -> sequence_index','sequence_call',1,'p_sequence_call','miniPythonParser.py',295),
  ('sequence_call -> sequence_slice','sequence_call',1,'p_sequence_call','miniPythonParser.py',296),
  ('sequence_call -> sequence_function_call','sequence_call',1,'p_sequence_call','miniPythonParser.py',297),
  ('sequence_call -> sequence_method','sequence_call',1,'p_sequence_call','miniPythonParser.py',298),
  ('sequence_index -> expr [ expr ]','sequence_index',4,'p_sequence_index','miniPythonParser.py',305),
  ('sequence_slice -> expr [ : ]','sequence_slice',4,'p_sequence_slice','miniPythonParser.py',312),
  ('sequence_slice -> expr [ expr : ]','sequence_slice',5,'p_sequence_slice','miniPythonParser.py',313),
  ('sequence_slice -> expr [ : expr ]','sequence_slice',5,'p_sequence_slice','miniPythonParser.py',314),
  ('sequence_slice -> expr [ expr : expr ]','sequence_slice',6,'p_sequence_slice','miniPythonParser.py',315),
  ('sequence_slice -> expr [ : : ]','sequence_slice',5,'p_sequence_slice','miniPythonParser.py',316),
  ('sequence_slice -> expr [ expr : : ]','sequence_slice',6,'p_sequence_slice','miniPythonParser.py',317),
  ('sequence_slice -> expr [ : expr : ]','sequence_slice',6,'p_sequence_slice','miniPythonParser.py',318),
  ('sequence_slice -> expr [ : : expr ]','sequence_slice',6,'p_sequence_slice','miniPythonParser.py',319),
  ('sequence_slice -> expr [ expr : expr : ]','sequence_slice',7,'p_sequence_slice','miniPythonParser.py',320),
  ('sequence_slice -> expr [ expr : : expr ]','sequence_slice',7,'p_sequence_slice','miniPythonParser.py',321),
  ('sequence_slice -> expr [ : expr : expr ]','sequence_slice',7,'p_sequence_slice','miniPythonParser.py',322),
  ('sequence_slice -> expr [ expr : expr : expr ]','sequence_slice',8,'p_sequence_slice','miniPythonParser.py',323),
  ('sequence_function_call -> LEN ( expr )','sequence_function_call',4,'p_sequence_function_call','miniPythonParser.py',354),
  ('sequence_method -> expr . APPEND ( expr )','sequence_method',6,'p_sequence_method','miniPythonParser.py',361),
  ('sequence_method -> expr . EXTEND ( expr )','sequence_method',6,'p_sequence_method','miniPythonParser.py',362),
  ('sequence_method -> expr . INSERT ( expr , expr )','sequence_method',8,'p_sequence_method','miniPythonParser.py',363),
  ('sequence_method -> expr . INDEX ( expr )','sequence_method',6,'p_sequence_method','miniPythonParser.py',364),
  ('sequence_method -> expr . POP ( )','sequence_method',5,'p_sequence_method','miniPythonParser.py',365),
  ('sequence_method -> expr . POP ( expr )','sequence_method',6,'p_sequence_method','miniPythonParser.py',366),
  ('sequence_method -> expr . COPY ( )','sequence_method',5,'p_sequence_method','miniPythonParser.py',367),
  ('args -> expr','args',1,'p_args','miniPythonParser.py',379),
  ('args -> expr , args','args',3,'p_args','miniPythonParser.py',380),
  ('args_or_empty -> args','args_or_empty',1,'p_args_or_empty','miniPythonParser.py',390),
  ('args_or_empty -> empty','args_or_empty',1,'p_args_or_empty','miniPythonParser.py',391),
  ('function_call -> ID ( args_or_empty )','function_call',4,'p_function_call','miniPythonParser.py',398),
  ('empty -> <empty>','empty',0,'p_empty','miniPythonParser.py',405),
]
